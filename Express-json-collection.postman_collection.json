{
	"info": {
		"_postman_id": "313cb7ee-32d2-4ddf-8674-984b01c89aa9",
		"name": "Express-json-collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7556965"
	},
	"item": [
		{
			"name": "Create Actor functionality",
			"item": [
				{
					"name": "Cannot create actor which has future birth date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Jaunius\", \r\n    \"lastName\": \"Pinelis\", \r\n    \"dateOfBirth\": \"2030-01-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Actor Successfull call",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json()\r",
									"\r",
									"pm.collectionVariables.set(\"actorId\", responseJson.id)\r",
									"\r",
									"// Check that first_name is jaunius and last_name is pinelis\r",
									"pm.test(\"Check that first and last names are correct\", function () {\r",
									"     var responseObject = pm.response.json();\r",
									"\r",
									"     pm.expect(responseObject).to.be.an('object');\r",
									"     pm.expect(responseObject.first_name).to.eq(\"Jaunius\");\r",
									"     pm.expect(responseObject.last_name).to.eq('Pinelis');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Jaunius\", \r\n    \"lastName\": \"Pinelis\", \r\n    \"dateOfBirth\": \"1990-01-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check created actor exists in get by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/actors/{{actorId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors",
								"{{actorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check created actor exists in Getall",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/actors/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Functionality",
			"item": [
				{
					"name": "Deleting Customer which does exist return 404",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/actors/100000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors",
								"100000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Actor for further delete",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Jaunius\", \r\n    \"lastName\": \"Pinelis\", \r\n    \"dateOfBirth\": \"1990-01-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting Customer which does exist return 404 Copy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/actors/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check deleted actor does not exists in get by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/actors/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check deleted actor does not exist in Getall",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/actors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"actors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Actors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/actors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"actors"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "actorId",
			"value": "4",
			"type": "string"
		}
	]
}